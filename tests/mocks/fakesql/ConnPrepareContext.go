// Code generated by mockery v0.0.0-dev. DO NOT EDIT.

package fakesql

import (
	context "context"
	"database/sql/driver"

	mock "github.com/stretchr/testify/mock"
)

// ConnPrepareContext is an autogenerated mock type for the ConnPrepareContext type
type ConnPrepareContext struct {
	mock.Mock
}

// PrepareContext provides a mock function with given fields: ctx, query
func (_m *ConnPrepareContext) PrepareContext(ctx context.Context, query string) (driver.Stmt, error) {
	ret := _m.Called(ctx, query)

	var r0 driver.Stmt
	if rf, ok := ret.Get(0).(func(context.Context, string) driver.Stmt); ok {
		r0 = rf(ctx, query)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(driver.Stmt)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, string) error); ok {
		r1 = rf(ctx, query)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTNewConnPrepareContext interface {
	mock.TestingT
	Cleanup(func())
}

// NewConnPrepareContext creates a new instance of ConnPrepareContext. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewConnPrepareContext(t mockConstructorTestingTNewConnPrepareContext) *ConnPrepareContext {
	mock := &ConnPrepareContext{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
