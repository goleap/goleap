// Code generated by mockery v0.0.0-dev. DO NOT EDIT.

package fakesql

import (
	context "context"
	"database/sql/driver"

	mock "github.com/stretchr/testify/mock"
)

// ConnBeginTx is an autogenerated mock type for the ConnBeginTx type
type ConnBeginTx struct {
	mock.Mock
}

// BeginTx provides a mock function with given fields: ctx, opts
func (_m *ConnBeginTx) BeginTx(ctx context.Context, opts driver.TxOptions) (driver.Tx, error) {
	ret := _m.Called(ctx, opts)

	var r0 driver.Tx
	if rf, ok := ret.Get(0).(func(context.Context, driver.TxOptions) driver.Tx); ok {
		r0 = rf(ctx, opts)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(driver.Tx)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, driver.TxOptions) error); ok {
		r1 = rf(ctx, opts)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTNewConnBeginTx interface {
	mock.TestingT
	Cleanup(func())
}

// NewConnBeginTx creates a new instance of ConnBeginTx. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewConnBeginTx(t mockConstructorTestingTNewConnBeginTx) *ConnBeginTx {
	mock := &ConnBeginTx{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
