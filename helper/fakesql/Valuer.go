// Code generated by mockery v0.0.0-dev. DO NOT EDIT.

package fakesql

import (
	"database/sql/driver"
	mock "github.com/stretchr/testify/mock"
)

// Valuer is an autogenerated mock type for the Valuer type
type Valuer struct {
	mock.Mock
}

// Value provides a mock function with given fields:
func (_m *Valuer) Value() (driver.Value, error) {
	ret := _m.Called()

	var r0 driver.Value
	if rf, ok := ret.Get(0).(func() driver.Value); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(driver.Value)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func() error); ok {
		r1 = rf()
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTNewValuer interface {
	mock.TestingT
	Cleanup(func())
}

// NewValuer creates a new instance of Valuer. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewValuer(t mockConstructorTestingTNewValuer) *Valuer {
	mock := &Valuer{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
